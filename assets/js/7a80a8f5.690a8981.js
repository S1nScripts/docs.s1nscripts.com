"use strict";(self.webpackChunkdocs_s_1_nscripts_com=self.webpackChunkdocs_s_1_nscripts_com||[]).push([[4667],{569:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>b,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var t=n(5893),o=n(3905);const i={sidebar_position:1,title:"Config",sidebar_label:"Config"},a="ATM Robbery",s={id:"atmrobbery/config",title:"Config",description:"Config file",source:"@site/docs/atmrobbery/config.md",sourceDirName:"atmrobbery",slug:"/atmrobbery/config",permalink:"/docs/atmrobbery/config",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/atmrobbery/config.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Config",sidebar_label:"Config"},sidebar:"docs",previous:{title:"Installation",permalink:"/docs/atmrobbery/install"},next:{title:"Common issues",permalink:"/docs/atmrobbery/common-issues"}},l={},c=[{value:"Config file",id:"config-file",level:2}];function f(e){const r={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.ah)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"atm-robbery",children:"ATM Robbery"}),"\n",(0,t.jsx)(r.h2,{id:"config-file",children:"Config file"}),"\n",(0,t.jsx)(r.p,{children:"For both QBCore and ESX :"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-lua",children:"Config = { }\r\n\r\nConfig.debugMode = true\r\n\r\nConfig.Framework = {\r\n    FrameworkName = 'QBCore', -- ESX or QBCore\r\n    QBCoreFileName = 'qb-core',\r\n    OldESX = false,\r\n    ESXEvent = 'esx:getSharedObject',\r\n    ESXFileName = 'es_extended',\r\n    SQLWrapper = 'oxmysql' --  oxmysql / mysql-async / ghmattimysql\r\n}\r\n\r\nif IsDuplicityVersion() then\r\n    -- Discord webhook URL for robbery logs\r\n\r\n    Config.DiscordWebhook = ''\r\nend\r\n\r\n-- If set to false, the script will use ox_target\r\n\r\nConfig.UseQBTarget = false\r\n\r\n-- If set to true, the script will use quasar_inventory\r\n\r\nConfig.UseQuasarInventory = false\r\n\r\n-- If set to true, the script will use ox_inventory\r\n\r\nConfig.UseOXInventory = false\r\n\r\n-- If `enable` set to true, the script will use this item name as cash (to get the money from an ATM)\r\n\r\nConfig.CashItem = {\r\n    enable = false,\r\n    itemName = 'cash'\r\n}\r\n\r\n-- The chance of getting money from the atm, should be a number between 0 - 100\r\n\r\nConfig.GetMoneyChance = 50\r\n\r\n-- The reward that the player will get for robbing the atm, the number will be somewhere around the min - max values\r\n\r\nConfig.AtmReward = { min = 5000, max = 10000 }\r\n\r\n-- Enable / disable the option to rob the atm using a drill\r\n\r\nConfig.EnableDrill = true\r\n\r\n-- Enable / disable the option to rob the atm using a c4\r\n\r\nConfig.EnableC4 = true\r\n\r\n-- Enable / disable the vehicle whitelist system\r\n\r\nConfig.EnableVehicleWhitelist = true\r\n\r\n-- All the vehicles that are whitelisted\r\n\r\nConfig.WhitelistVehicles = {\r\n    ['futo'] = true\r\n}\r\n\r\n-- All the jobs that will get the robbery notification\r\n\r\nConfig.NotificationJobs = {\r\n    ['police'] = true\r\n}\r\n\r\n-- Robbery notification timeout\r\n\r\nConfig.NotificationTimeout = 15000\r\n\r\n-- Number of milliseconds after which the rope and atm are deleted when you finished the robbery process for an ATM.\r\n\r\nConfig.AtmCooldown = 20000\r\n\r\n-- Progress bar durations\r\n\r\nConfig.ProgressDuration = { drillfirst = 7000, drillsecond = 7000, search = 5000 }\r\n\r\n-- Robbery items\r\n\r\nConfig.Items = { rope = 'rope', drill = 'drill', c4 = 'c4' }\r\n\r\n-- Distance to drill the ATM after drilling it from the wall\r\n\r\nConfig.DrillAfterDistance = 20.0\r\n\r\n-- Minimum police online to start a robbery\r\n\r\nConfig.MinPoliceOnline = 0\n"})})]})}function b(e={}){const{wrapper:r}={...(0,o.ah)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(f,{...e})}):f(e)}},3905:(e,r,n)=>{n.d(r,{ah:()=>c});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=t.createContext({}),c=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},f={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},b=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,b=s(e,["components","mdxType","originalType","parentName"]),m=c(n),u=o,d=m["".concat(l,".").concat(u)]||m[u]||f[u]||i;return n?t.createElement(d,a(a({ref:r},b),{},{components:n})):t.createElement(d,a({ref:r},b))}));b.displayName="MDXCreateElement"}}]);