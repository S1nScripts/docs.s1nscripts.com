"use strict";(self.webpackChunkdocs_s_1_nscripts_com=self.webpackChunkdocs_s_1_nscripts_com||[]).push([[2679],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},f="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=c(n),u=r,d=f["".concat(l,".").concat(u)]||f[u]||b[u]||i;return n?o.createElement(d,a(a({ref:t},p),{},{components:n})):o.createElement(d,a({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[f]="string"==typeof e?e:r,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4710:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>b,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const i={sidebar_position:1,title:"Config",sidebar_label:"Config"},a="Job Center",s={unversionedId:"jobcenter/config",id:"jobcenter/config",title:"Config",description:"Config file",source:"@site/docs/jobcenter/config.md",sourceDirName:"jobcenter",slug:"/jobcenter/config",permalink:"/docs/jobcenter/config",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/jobcenter/config.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Config",sidebar_label:"Config"},sidebar:"docs",previous:{title:"Installation",permalink:"/docs/jobcenter/install"},next:{title:"Installation",permalink:"/docs/carrental/install"}},l={},c=[{value:"Config file",id:"config-file",level:2}],p={toc:c},f="wrapper";function b(e){let{components:t,...n}=e;return(0,r.kt)(f,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"job-center"},"Job Center"),(0,r.kt)("h2",{id:"config-file"},"Config file"),(0,r.kt)("p",null,"For ESX:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'--[[\n    Need help with the script ? Go into the support Discord https://discord.gg/aKF3DX8yPx\n    A verification that you bought the script will be necessary.\n]]\n\nConfig = {\n    debugMode = false, -- Set to true if you want to have the logs messages from the script\n    useESXExport = false, -- Set to true if you are using ESX Legacy\n    themeColor = "#FD86AB", -- HEX color for the theme of the UI\n    triggers = {\n        getESX = "esx:getSharedObject" -- Change it only if you changed it in es_extended\n    },\n    position = {\n        blip = {\n            seeDistance = 100, -- Distance to see the blip\n            position = vector3(-250.02, -971.38, 31.22), -- vector3(X, Y, Z)\n            text = "Job Center", -- Text of the blip\n            color = 5, -- Color of the blip (see https://docs.fivem.net/docs/game-references/blips/#blip-colors)\n            sprite = 457, -- Sprite of the blip (see https://docs.fivem.net/docs/game-references/blips/#blips)\n            scale = 0.9 -- Scale of the blip\n        },\n        marker = {\n            type = 20, -- Marker type (see https://docs.fivem.net/docs/game-references/markers/ for the list)\n            useDistance = 1.5, -- Distance between the Player and the marker in order to interact with it.\n            position = vector3(-250.02, -971.38, 31.22), -- Position of the marker\n            size = vector3(1.5, 1.5, 1.0), -- Size of the marker in X, Y, Z size\n            color = vector3(120, 120, 240) -- Color of the marker in R, G, B\n        },\n    },\n    availableJobs = {\n        --[[\n\n        Job Template:\n        {\n            label = "Intitle of the job",\n            job = "Job name (same as if you would setjob yourself)",\n            grade = 0, -- Grade associated to the job, by default 0\n            information = {"Hard Working", "Full Time", "Senior"}, -- (MAX: 3 elements) Main informations about the job\n            salary = 8000, -- Salary of the job\n            payInterval = "Hour" -- Interval of pay for the job\n            jobPosition = vector2(x, y) -- Optional (you can remove the line if you don\'t want the feature), set a waypoint to a location when applying to the job\n        },\n\n        ]]\n\n        {\n            label = "Medic",\n            job = "ambulance",\n            grade = 0,\n            information = {"Hard Working", "Full Time", "Senior"},\n            salary = 8000,\n            payInterval = "Hour",\n            jobPosition = vector2(50, 50)\n        },\n        {\n            label = "Car dealer",\n            job = "cardealer",\n            grade = 0,\n            information = {"Hard Working", "Full Time", "Senior"},\n            salary = 8000,\n            payInterval = "Hour",\n            jobPosition = vector2(300, 5000)\n        },\n    }\n}\n')),(0,r.kt)("p",null,"For QBCore:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'--[[\n    Need help with the script ? Go into the support Discord https://discord.gg/aKF3DX8yPx\n    A verification that you bought the script will be necessary.\n]]\n\nConfig = {\n    debugMode = false, -- Set to true if you want to have the logs messages from the script\n    oldQBCoreVersion = false, -- Set to true if you are using the old QBCore function oldQBCoreVersion()\n    themeColor = "#FD86AB", -- HEX color for the theme of the UI\n    disable = {\n        marker = false, -- Disable all markers for blip positions\n        displayTopLeftText = false -- Disable the text on the top left of the screen\n    },\n    position = {\n        blip = {\n            seeDistance = 100, -- Distance to see the marker\n            position = vector3(-250.02, -971.38, 31.22), -- vector3(X, Y, Z)\n            text = "Job Center", -- Text of the blip\n            color = 5, -- Color of the blip (see https://docs.fivem.net/docs/game-references/blips/#blip-colors)\n            sprite = 457, -- Sprite of the blip (see https://docs.fivem.net/docs/game-references/blips/#blips)\n            scale = 0.9 -- Scale of the blip\n        },\n        marker = {\n            type = 20, -- Marker type (see https://docs.fivem.net/docs/game-references/markers/ for the list)\n            useDistance = 1.5, -- Distance between the Player and the marker in order to interact with it.\n            position = vector3(-250.02, -971.38, 31.22), -- Position of the marker\n            size = vector3(1.5, 1.5, 1.0), -- Size of the marker in X, Y, Z size\n            color = vector3(120, 120, 240) -- Color of the marker in R, G, B\n        },\n    },\n    availableJobs = {\n        --[[\n\n        Job Template:\n        {\n            label = "Intitle of the job",\n            job = "Job name (same as if you would setjob yourself)",\n            grade = 0, -- Grade associated to the job, by default 0\n            information = {"Hard Working", "Full Time", "Senior"}, -- (MAX: 3 elements) Main informations about the job\n            salary = 8000, -- Salary of the job\n            payInterval = "Hour" -- Interval of pay for the job\n            jobPosition = vector2(x, y) -- Optional (you can remove the line if you don\'t want the feature), set a waypoint to a location when applying to the job\n        },\n\n        ]]\n\n        {\n            label = "Medic",\n            job = "ambulance",\n            grade = 0,\n            information = {"Hard Working", "Full Time", "Senior"},\n            salary = 8000,\n            payInterval = "Hour",\n            jobPosition = vector2(50, 50)\n        },\n        {\n            label = "Car dealer",\n            job = "cardealer",\n            grade = 0,\n            information = {"Hard Working", "Full Time", "Senior"},\n            salary = 8000,\n            payInterval = "Hour",\n            jobPosition = vector2(300, 5000)\n        },\n    }\n}\n')))}b.isMDXComponent=!0}}]);