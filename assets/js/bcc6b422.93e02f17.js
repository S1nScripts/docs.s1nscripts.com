"use strict";(self.webpackChunkdocs_s_1_nscripts_com=self.webpackChunkdocs_s_1_nscripts_com||[]).push([[9466],{9465:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var r=t(5893),o=t(1151);const a={sidebar_position:1,title:"Config",sidebar_label:"Config"},s="Government System",i={id:"government/config",title:"Config",description:"Config file",source:"@site/docs/government/config.md",sourceDirName:"government",slug:"/government/config",permalink:"/docs/government/config",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/government/config.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Config",sidebar_label:"Config"},sidebar:"docs",previous:{title:"Installation",permalink:"/docs/government/install"},next:{title:"Config",permalink:"/docs/npcplacer/config"}},h={},d=[{value:"Config file",id:"config-file",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"government-system",children:"Government System"}),"\n",(0,r.jsx)(n.h2,{id:"config-file",children:"Config file"}),"\n",(0,r.jsx)(n.p,{children:"For both QBCore and ESX :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'--\r\n-- WELCOME !\r\n-- First of all, thank you for using my script. I hope you will enjoy it.\r\n-- This is a configuration file, you can modify some parts of the script here.\r\n--\r\n-- It is important to read the comments to understand what you are doing and what you can do.\r\n--\r\n\r\n-- To modify the loaded translation file, please go to the \'fxmanifest.lua\' file and modify the \'languages/english.lua\' file to the language you want to use.\r\n\r\nConfig = {}\r\n\r\n-- Set this variable to true if you want to enable debug mode (for developers and support)\r\nConfig.DebugMode = true\r\n\r\n-- Framework settings\r\nConfig.Framework = {\r\n    -- If you use ESX, you need to set this to \'ESX\'\r\n    -- If you use QBCore, you need to set this to \'QBCore\'\r\n    FrameworkName = "QBCore",\r\n    -- The name of the QBCore resource, this is only used if you use QBCore\r\n    QBCoreFileName = "qb-core",\r\n    -- Set to true if you use the old ESX (not ESX Legacy)\r\n    OldESX = false,\r\n    -- If you use the old ESX, define the event name here to get the ESX object (by default it\'s \'esx:getSharedObject\')\r\n    ESXEvent = "esx:getSharedObject",\r\n    -- The name of the ESX resource, this is only used if you use ESX\r\n    ESXFileName = "es_extended"\r\n}\r\n\r\n-- Scripts names for the exports\r\nConfig.ExportNames = {\r\n    s1nLib = "s1n_lib",\r\n    \r\n    oxTarget = "ox_target",\r\n    qbTarget = "qb-target",\r\n    qbBanking = "qb-banking",\r\n    qbManagement = "qb-management",\r\n}\r\n\r\n-- Dependencies settings\r\nConfig.Dependencies = {\r\n    -- You need to set to true which target script you are using\r\n    oxTarget = true,\r\n    qbTarget = false,\r\n\r\n    -- You need to set to true if you use qb-management (for handling the accounts money)\r\n    qbManagement = true,\r\n}\r\n\r\n-- Events names used (ONLY change it if you know what you are doing)\r\nConfig.Events = {\r\n    qbManagement = {\r\n        removeAccountMoney = "qb-bossmenu:server:removeAccountMoney"\r\n    },\r\n\r\n    esxAddonAccount = {\r\n        getSharedAccount = "esx_addonaccount:getSharedAccount"\r\n    },\r\n}\r\n\r\n-- Set the interval in minutes to check for business tax due and remove it from the society account\r\nConfig.IntervalBusinessTaxCheck = 10\r\n\r\n-- These are the groups that have access to the commands\r\nConfig.AdminGroups = {\r\n    -- Example:\r\n    --\r\n    -- Only modify "groupName" by the name of the group you want to give access to the commands\r\n    -- ["groupName"] = true,\r\n\r\n    ["admin"] = true,\r\n    ["god"] = true,\r\n}\r\n\r\n-- These are the peds that will be created\r\nConfig.Peds = {\r\n    -- Here are all the features that you can use in the \'features\' table\r\n    -- ["TaxationSystem"] = true,\r\n    -- ["AppointmentSystem"] = true,\r\n    -- ["EnterpriseManagement"] = true,\r\n    -- ["AnnouncementSystem"] = true,\r\n    -- ["DefconManagement"] = true,\r\n    -- ["FundsSystem"] = true,\r\n    -- ["AppointmentSystemNormal"] = true,\r\n    -- ["VotingSystem"] = true,\r\n\r\n    {\r\n        -- Set this to true if you want to make this ped only available to the government job\r\n        jobOnly = true,\r\n        -- The model of the ped\r\n        model = "a_m_m_business_01",\r\n        -- The coordinates of the ped\r\n        coords = vector4(1706.21, 3790.58, 34.77 - 1, 106.69),\r\n        -- The features of the ped\r\n        features = {\r\n            ["TaxationSystem"] = true,\r\n            ["AppointmentSystem"] = true,\r\n            ["EnterpriseManagement"] = true,\r\n            ["AnnouncementSystem"] = true,\r\n            ["DefconManagement"] = true,\r\n            ["FundsSystem"] = true\r\n        }\r\n    },\r\n    {\r\n        -- Set this to true if you want to make this ped only available to the government job\r\n        jobOnly = false,\r\n        -- The model of the ped\r\n        model = "a_m_m_business_01",\r\n        -- The coordinates of the ped\r\n        coords = vector4(1698.81, 3784.57, 34.77 - 1, 211.1),\r\n        -- The features of the ped\r\n        features = {\r\n            ["AppointmentSystemNormal"] = true,\r\n        }\r\n    },\r\n    {\r\n        -- Set this to true if you want to make this ped only available to the government job\r\n        jobOnly = false,\r\n        -- The model of the ped\r\n        model = "a_m_m_business_01",\r\n        -- The coordinates of the ped\r\n        coords = vector4(1700.22, 3785.53, 34.77 - 1, 219.66),\r\n        -- The features of the ped\r\n        features = {\r\n            ["VotingSystem"] = true,\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n-- Set this to true if you want to automatically add the jobs and grades to the database, otherwise set it to false and add them manually in your database (if you\'re using ESX) or jobs.lua (if you\'re using QBCore)\r\nConfig.AutoAddJobsAndGrades = true\r\n\r\n-- Add the jobs that you want to use in the script (for the grades below). If Config.AutoAddJobsAndGrades is set to true, the jobs will be automatically added.\r\n-- You can add as many jobs as you want\r\nConfig.Jobs = {\r\n    {\r\n        -- The name of the job (this is the name that will be used in the database)\r\n        name = "gov",\r\n        -- The label of the job\r\n        label = "Government",\r\n    },\r\n}\r\n\r\n-- These are the grades that you can use with jobs listed in Config.Jobs\r\n-- They will be automatically added to the database, no need to add them manually (if Config.AutoAddJobsAndGrades is set to true)\r\n-- You can add as many grades as you want\r\nConfig.Grades = {\r\n    ["1"] = {\r\n        -- The name of the grade\r\n        name = "Governor",\r\n        -- The name of the job associated with the grade (this is the name that will be used in the database)\r\n        jobName = "gov",\r\n        -- The features that the grade has access to\r\n        access = {\r\n            ["TaxationSystem"] = true,\r\n            ["AppointmentSystem"] = true,\r\n            ["EnterpriseManagement"] = true,\r\n            ["AnnouncementSystem"] = true,\r\n            ["DefconManagement"] = true,\r\n            ["FundsSystem"] = true,\r\n        },\r\n        -- The salary of the grade\r\n        salary = 500\r\n    },\r\n    ["2"] = {\r\n        -- The name of the grade\r\n        name = "Secretary of State",\r\n        -- The name of the job associated with the grade\r\n        jobName = "gov",\r\n        -- The features that the grade has access to\r\n        access = {\r\n            ["AppointmentSystem"] = true,\r\n            ["AnnouncementSystem"] = true,\r\n        },\r\n        -- The salary of the grade\r\n        salary = 500\r\n    },\r\n    ["3"] = {\r\n        -- The name of the grade\r\n        name = "Treasurer",\r\n        -- The name of the job associated with the grade\r\n        jobName = "gov",\r\n        -- The features that the grade has access to\r\n        access = {\r\n            ["TaxationSystem"] = true,\r\n            ["FundsSystem"] = true,\r\n        },\r\n        -- The salary of the grade\r\n        salary = 500\r\n    },\r\n    ["4"] = {\r\n        -- The name of the grade\r\n        name = "Government Agent",\r\n        -- The name of the job associated with the grade\r\n        jobName = "gov",\r\n        -- The features that the grade has access to\r\n        access = {},\r\n        -- The salary of the grade\r\n        salary = 500\r\n    }\r\n}\r\n\r\n-- Settings for the automatic voting system\r\n-- The automatic voting system is a system that allows players to vote for a candidate.\r\n-- <!> This system doesn\'t persist between script/server restarts. If this feature is already planned, it will be added in a future update.\r\nConfig.Voting = {\r\n    -- Set this to true if you want to enable the automatic voting system\r\n    enabled = false,\r\n\r\n    -- If set this to false, people already in the government job can\'t present themselves\r\n    presentEvenIfHasGovernmentJob = true,\r\n\r\n    -- The durations of the voting system for each grade ID from Config.Grades\r\n    durations = {\r\n        -- The ID of the grade from Config.Grades\r\n        ["1"] = {\r\n            -- Sets the time duration for presenting oneself as the rank associated with the ID\r\n            present = 10,\r\n            -- Sets the time duration for voting for the rank associated with the ID\r\n            voting = 10,\r\n            -- Set this to true if you want to enable the draw system (meaning that if there is a draw, the voting will be extended)\r\n            draw = false\r\n        },\r\n        -- The ID of the grade from Config.Grades\r\n        ["2"] = {\r\n            -- Sets the time duration for presenting oneself as the rank associated with the ID\r\n            present = 10,\r\n            -- Sets the time duration for voting for the rank associated with the ID\r\n            voting = 10,\r\n            -- Set this to true if you want to enable the draw system (meaning that if there is a draw, the voting will be extended)\r\n            draw = false\r\n        },\r\n        -- The ID of the grade from Config.Grades\r\n        ["3"] = {\r\n            -- Sets the time duration for presenting oneself as the rank associated with the ID\r\n            present = 10,\r\n            -- Sets the time duration for voting for the rank associated with the ID\r\n            voting = 10,\r\n            -- Set this to true if you want to enable the draw system (meaning that if there is a draw, the voting will be extended)\r\n            draw = false\r\n        },\r\n        -- The ID of the grade from Config.Grades\r\n        ["4"] = {\r\n            -- Sets the time duration for presenting oneself as the rank associated with the ID\r\n            present = 10,\r\n            -- Sets the time duration for voting for the rank associated with the ID\r\n            voting = 10,\r\n            -- Set this to true if you want to enable the draw system (meaning that if there is a draw, the voting will be extended)\r\n            draw = false\r\n        }\r\n    }\r\n}\n'})})]})}function m(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>s});var r=t(7294);const o={},a=r.createContext(o);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);