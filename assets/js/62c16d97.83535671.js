"use strict";(self.webpackChunkdocs_s_1_nscripts_com=self.webpackChunkdocs_s_1_nscripts_com||[]).push([[867],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=o,m=u["".concat(s,".").concat(d)]||u[d]||f[d]||r;return n?i.createElement(m,a(a({ref:t},p),{},{components:n})):i.createElement(m,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<r;c++)a[c]=n[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},545:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>f,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=n(7462),o=(n(7294),n(3905));const r={sidebar_position:2,title:"How To Use",sidebar_label:"How To Use"},a=void 0,l={unversionedId:"notify/how-to-use",id:"notify/how-to-use",title:"How To Use",description:"S1nScripts Logo",source:"@site/docs/notify/how-to-use.md",sourceDirName:"notify",slug:"/notify/how-to-use",permalink:"/docs.s1nscripts.com/docs/notify/how-to-use",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/notify/how-to-use.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"How To Use",sidebar_label:"How To Use"},sidebar:"docs",previous:{title:"Installation",permalink:"/docs.s1nscripts.com/docs/notify/install"},next:{title:"Framework Implementation",permalink:"/docs.s1nscripts.com/docs/notify/framework"}},s={},c=[{value:"Default Types",id:"default-types",level:2},{value:"Default Positions",id:"default-positions",level:2},{value:"Client side",id:"client-side",level:3},{value:"Server side",id:"server-side",level:3}],p={toc:c},u="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://forum.cfx.re/uploads/default/original/4X/7/1/8/718c6f28a9b5ab0dc33bf79288bcb418e7684326.jpeg",alt:"S1nScripts Logo"})),(0,o.kt)("h2",{id:"default-types"},"Default Types"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"success")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"error")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"info")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"warning")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"message"))),(0,o.kt)("h2",{id:"default-positions"},"Default Positions"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"top")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"top-left")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"top-right")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bottom")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bottom-left")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bottom-right"))),(0,o.kt)("h3",{id:"client-side"},"Client side"),(0,o.kt)("p",null,"To send a notification from a client-side file, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"s1n_notify:notify")," event:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'TriggerEvent("s1n_notify:notify", {\n  type = "success", -- Modify the type by replacing "success" with the type you want (all listed above)\n  title = "The title of the notifcation", -- Replace "The title of the notifcation" with the title you want\n  message = "The text of the notification", -- Replace "The text of the notification" with the text you want\n  duration = 5000, -- The duration of the notification in milliseconds\n  theme = "colorful", -- The theme of the notification (colorful or white)\n  position = "top-right" -- Modify the position of the notification by replacing "top-right" with the position you want (all listed above)\n})\n')),(0,o.kt)("h3",{id:"server-side"},"Server side"),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"s1n_notify:notify")," event to send a notification to the client from a server-side file."),(0,o.kt)("p",null,"Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"source")," with the source of the player you want to send the notification to. By default in a server-side file, the source is the player who triggered the event."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'TriggerEvent("s1n_notify:notify", source, {\n  type = "success", -- Modify the type by replacing "success" with the type you want (all listed above)\n  title = "The title of the notifcation", -- Replace "The title of the notifcation" with the title you want\n  message = "The text of the notification", -- Replace "The text of the notification" with the text you want\n  duration = 5000, -- The duration of the notification in milliseconds\n  theme = "colorful", -- The theme of the notification (colorful or white)\n  position = "top-right" -- Modify the position of the notification by replacing "top-right" with the position you want (all listed above)\n})\n')),(0,o.kt)("p",null,"Example of a server-side file which sends a notification to the player who triggered the /testnotify command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'RegisterCommand("testnotify", function(source, args)\n    TriggerClientEvent("s1n_notify:notify", source, {\n        type = "success",\n        title = "The Notify System",\n        message = "Thanks for using my notify system! :)",\n        duration = 5000,\n        theme = "colorful",\n        position = "top-right"\n    })\nend, false)\n')))}f.isMDXComponent=!0}}]);