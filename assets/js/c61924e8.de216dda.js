"use strict";(self.webpackChunkdocs_s_1_nscripts_com=self.webpackChunkdocs_s_1_nscripts_com||[]).push([[9292],{316:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>f,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var t=o(5893),i=o(1151);const s={sidebar_position:1,title:"Config",sidebar_label:"Config"},r="Notify",c={id:"notify/config",title:"Config",description:"Config file",source:"@site/docs/notify/config.md",sourceDirName:"notify",slug:"/notify/config",permalink:"/docs/notify/config",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/notify/config.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Config",sidebar_label:"Config"},sidebar:"docs",previous:{title:"Framework Implementation",permalink:"/docs/notify/framework"},next:{title:"Installation",permalink:"/docs/jobcenter/install"}},a={},l=[{value:"Config file",id:"config-file",level:2}];function u(n){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"notify",children:"Notify"}),"\n",(0,t.jsx)(e.h2,{id:"config-file",children:"Config file"}),"\n",(0,t.jsx)(e.p,{children:"Standalone:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-lua",children:'--[[\n    Need help with the script ? Go into the support Discord https://discord.gg/aKF3DX8yPx\n    A verification that you bought the script will be necessary.\n\n    IMPORTANT:\n\n    Default themes: white, colorful\n    List of available position: top, top-right, top-left, bottom, bottom-right, bottom-left\n\n    USAGE:\n\n    With exports["s1n_notify"]:Notify(type, title, message, duration, theme, position)\n    Example:\n    exports["s1n_notify"]:Notify("success", "the title", "message", 5000, "colorful", "top-right")\n\n    With TriggerEvent("s1n_notify:notify", object)\n    Example:\n    TriggerEvent("s1n_notify:notify",\n        {\n            type = "success",\n            title = "title",\n            message = "message",\n            duration = 5000,\n            theme = "colorful",\n            position = "top-right"\n        }\n    )\n]]\n\nConfig = {\n    notificationTypes = {\n        -- Here you can setup new type of notifications.\n        info = {\n            icon = "MdInfo",\n            color = "#4666D7",\n            sound = {\n                enable = true,\n                source = "popup.mp3",\n                volume = 0.75\n            }\n        },\n        warning = {\n            icon = "MdWarning",\n            color = "#E7A526",\n            sound = {\n                enable = true,\n                source = "popup.mp3",\n                volume = 0.5\n            }\n        },\n        success = {\n            icon = "MdCheckCircle",\n            color = "#49AF72",\n            sound = {\n                enable = true,\n                source = "pop.wav",\n                volume = 0.2\n            }\n        },\n        error = {\n            icon = "MdError",\n            color = "#D74646",\n            sound = {\n                enable = true,\n                source = "pop.wav",\n                volume = 1\n            }\n        },\n        message = {\n            icon = "MdMessage",\n            color = "#676767",\n            sound = {\n                enable = true,\n                source = "pop.wav",\n                volume = 1\n            }\n        },\n        --[[\n        TO CREATE A CUSTOM TYPE:\n\n        nameOfTheNotificationType = {\n            icon = "NameOfTheIcon", -- Available icons : https://react-icons.github.io/react-icons/icons?name=md\n            color = "#676767", -- Color in HEX, RGB(A), HSLA..\n            sound = {\n                enable = true, -- Enable or disable sound effect\n                source = "pop.wav", -- Name of the file\n                volume = 1 -- Volume between 0 and 1\n            }\n        },\n        ]]\n    },\n\n    notifyIntervals = {\n        --[[\n        Example for notifications with interval:\n\n        {\n            interval = 10000,\n            notify = {\n                type = "info",\n                title = "Tip",\n                message = "You can press I to open your inventory",\n                duration = 4000,\n                theme = "colorful",\n                position = "top-right"\n            }\n        },\n\n        TO PUT BELOW THE DOUBLE ]\n        ]]\n\n    },\n}\n'})})]})}function f(n={}){const{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},1151:(n,e,o)=>{o.d(e,{Z:()=>c,a:()=>r});var t=o(7294);const i={},s=t.createContext(i);function r(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);