"use strict";(self.webpackChunkdocs_s_1_nscripts_com=self.webpackChunkdocs_s_1_nscripts_com||[]).push([[6312],{1976:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var t=o(5893),i=o(1151);const s={sidebar_position:1,title:"Installation",sidebar_label:"Installation"},r="Notification System Installation",c={id:"notify/install",title:"Installation",description:"S1nScripts Logo",source:"@site/docs/notify/install.md",sourceDirName:"notify",slug:"/notify/install",permalink:"/docs/notify/install",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/notify/install.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Installation",sidebar_label:"Installation"},sidebar:"docs",previous:{title:"Config",permalink:"/docs/impound/config"},next:{title:"How To Use",permalink:"/docs/notify/how-to-use"}},a={},l=[];function d(n){const e={code:"code",h1:"h1",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:"https://forum.cfx.re/uploads/default/original/4X/7/1/8/718c6f28a9b5ab0dc33bf79288bcb418e7684326.jpeg",alt:"S1nScripts Logo"})}),"\n",(0,t.jsx)(e.h1,{id:"notification-system-installation",children:"Notification System Installation"}),"\n",(0,t.jsx)(e.p,{children:"Follow these steps to install and configure the notification system:"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["Drag the ",(0,t.jsx)(e.code,{children:"s1n_notifysystem"})," folder into your ",(0,t.jsx)(e.code,{children:"resources"})," directory."]}),"\n",(0,t.jsxs)(e.li,{children:["Start the notification system by adding ",(0,t.jsx)(e.code,{children:"start s1n_notifysystem"})," to your ",(0,t.jsx)(e.code,{children:"server.cfg"})," file."]}),"\n",(0,t.jsxs)(e.li,{children:["Configure the script by modifying the values in the ",(0,t.jsx)(e.code,{children:"config.lua"})," file located in the ",(0,t.jsx)(e.code,{children:"s1n_notify"})," script folder."]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["Here is an example of the ",(0,t.jsx)(e.code,{children:"config.lua"})," file:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-lua",children:'Config = {\n    notificationTypes = {\n        -- Here you can setup new type of notifications.\n        info = {\n            icon = "MdInfo",\n            color = "#4666D7",\n            sound = {\n                enable = true,\n                source = "popup.mp3",\n                volume = 0.75\n            }\n        },\n        warning = {\n            icon = "MdWarning",\n            color = "#E7A526",\n            sound = {\n                enable = true,\n                source = "popup.mp3",\n                volume = 0.5\n            }\n        },\n        success = {\n            icon = "MdCheckCircle",\n            color = "#49AF72",\n            sound = {\n                enable = true,\n                source = "pop.wav",\n                volume = 0.2\n            }\n        },\n        error = {\n            icon = "MdError",\n            color = "#D74646",\n            sound = {\n                enable = true,\n                source = "pop.wav",\n                volume = 1\n            }\n        },\n        message = {\n            icon = "MdMessage",\n            color = "#676767",\n            sound = {\n                enable = true,\n                source = "pop.wav",\n                volume = 1\n            }\n        },\n        --[[\n        TO CREATE A CUSTOM TYPE:\n\n        nameOfTheNotificationType = {\n            icon = "NameOfTheIcon", -- Available icons : https://react-icons.github.io/react-icons/icons?name=md\n            color = "#676767", -- Color in HEX, RGB(A), HSLA..\n            sound = {\n                enable = true, -- Enable or disable sound effect\n                source = "pop.wav", -- Name of the file\n                volume = 1 -- Volume between 0 and 1\n            }\n        },\n        ]]\n    },\n\n    notifyIntervals = {\n        --[[\n        Example for notifications with interval:\n\n        {\n            interval = 10000,\n            notify = {\n                type = "info",\n                title = "Tip",\n                message = "You can press I to open your inventory",\n                duration = 4000,\n                theme = "colorful",\n                position = "top-right"\n            }\n        },\n\n        TO PUT BELOW THE DOUBLE ]\n        ]]\n\n    },\n}\n'})}),"\n",(0,t.jsxs)(e.p,{children:["That's it! You should now be able to use the notification system in your FiveM server. Check the ",(0,t.jsx)("a",{href:"how-to-use",children:"How To Use"})," page to see how to use the notification system."]})]})}function u(n={}){const{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},1151:(n,e,o)=>{o.d(e,{Z:()=>c,a:()=>r});var t=o(7294);const i={},s=t.createContext(i);function r(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);