"use strict";(self.webpackChunkdocs_s_1_nscripts_com=self.webpackChunkdocs_s_1_nscripts_com||[]).push([[2679],{7355:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var t=o(5893),r=o(1151);const i={sidebar_position:1,title:"Config",sidebar_label:"Config"},a="Job Center",s={id:"jobcenter/config",title:"Config",description:"Config file",source:"@site/docs/jobcenter/config.md",sourceDirName:"jobcenter",slug:"/jobcenter/config",permalink:"/docs/jobcenter/config",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Config",sidebar_label:"Config"},sidebar:"docs",previous:{title:"Installation",permalink:"/docs/jobcenter/install"},next:{title:"Installation",permalink:"/docs/carrental/install"}},l={},c=[{value:"Config file",id:"config-file",level:2}];function f(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"job-center",children:"Job Center"}),"\n",(0,t.jsx)(n.h2,{id:"config-file",children:"Config file"}),"\n",(0,t.jsx)(n.p,{children:"For ESX:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'--[[\n    Need help with the script ? Go into the support Discord https://discord.gg/aKF3DX8yPx\n    A verification that you bought the script will be necessary.\n]]\n\nConfig = {\n    debugMode = false, -- Set to true if you want to have the logs messages from the script\n    useESXExport = false, -- Set to true if you are using ESX Legacy\n    themeColor = "#FD86AB", -- HEX color for the theme of the UI\n    triggers = {\n        getESX = "esx:getSharedObject" -- Change it only if you changed it in es_extended\n    },\n    position = {\n        blip = {\n            seeDistance = 100, -- Distance to see the blip\n            position = vector3(-250.02, -971.38, 31.22), -- vector3(X, Y, Z)\n            text = "Job Center", -- Text of the blip\n            color = 5, -- Color of the blip (see https://docs.fivem.net/docs/game-references/blips/#blip-colors)\n            sprite = 457, -- Sprite of the blip (see https://docs.fivem.net/docs/game-references/blips/#blips)\n            scale = 0.9 -- Scale of the blip\n        },\n        marker = {\n            type = 20, -- Marker type (see https://docs.fivem.net/docs/game-references/markers/ for the list)\n            useDistance = 1.5, -- Distance between the Player and the marker in order to interact with it.\n            position = vector3(-250.02, -971.38, 31.22), -- Position of the marker\n            size = vector3(1.5, 1.5, 1.0), -- Size of the marker in X, Y, Z size\n            color = vector3(120, 120, 240) -- Color of the marker in R, G, B\n        },\n    },\n    availableJobs = {\n        --[[\n\n        Job Template:\n        {\n            label = "Intitle of the job",\n            job = "Job name (same as if you would setjob yourself)",\n            grade = 0, -- Grade associated to the job, by default 0\n            information = {"Hard Working", "Full Time", "Senior"}, -- (MAX: 3 elements) Main informations about the job\n            salary = 8000, -- Salary of the job\n            payInterval = "Hour" -- Interval of pay for the job\n            jobPosition = vector2(x, y) -- Optional (you can remove the line if you don\'t want the feature), set a waypoint to a location when applying to the job\n        },\n\n        ]]\n\n        {\n            label = "Medic",\n            job = "ambulance",\n            grade = 0,\n            information = {"Hard Working", "Full Time", "Senior"},\n            salary = 8000,\n            payInterval = "Hour",\n            jobPosition = vector2(50, 50)\n        },\n        {\n            label = "Car dealer",\n            job = "cardealer",\n            grade = 0,\n            information = {"Hard Working", "Full Time", "Senior"},\n            salary = 8000,\n            payInterval = "Hour",\n            jobPosition = vector2(300, 5000)\n        },\n    }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"For QBCore:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'--[[\n    Need help with the script ? Go into the support Discord https://discord.gg/aKF3DX8yPx\n    A verification that you bought the script will be necessary.\n]]\n\nConfig = {\n    debugMode = false, -- Set to true if you want to have the logs messages from the script\n    oldQBCoreVersion = false, -- Set to true if you are using the old QBCore function oldQBCoreVersion()\n    themeColor = "#FD86AB", -- HEX color for the theme of the UI\n    disable = {\n        marker = false, -- Disable all markers for blip positions\n        displayTopLeftText = false -- Disable the text on the top left of the screen\n    },\n    position = {\n        blip = {\n            seeDistance = 100, -- Distance to see the marker\n            position = vector3(-250.02, -971.38, 31.22), -- vector3(X, Y, Z)\n            text = "Job Center", -- Text of the blip\n            color = 5, -- Color of the blip (see https://docs.fivem.net/docs/game-references/blips/#blip-colors)\n            sprite = 457, -- Sprite of the blip (see https://docs.fivem.net/docs/game-references/blips/#blips)\n            scale = 0.9 -- Scale of the blip\n        },\n        marker = {\n            type = 20, -- Marker type (see https://docs.fivem.net/docs/game-references/markers/ for the list)\n            useDistance = 1.5, -- Distance between the Player and the marker in order to interact with it.\n            position = vector3(-250.02, -971.38, 31.22), -- Position of the marker\n            size = vector3(1.5, 1.5, 1.0), -- Size of the marker in X, Y, Z size\n            color = vector3(120, 120, 240) -- Color of the marker in R, G, B\n        },\n    },\n    availableJobs = {\n        --[[\n\n        Job Template:\n        {\n            label = "Intitle of the job",\n            job = "Job name (same as if you would setjob yourself)",\n            grade = 0, -- Grade associated to the job, by default 0\n            information = {"Hard Working", "Full Time", "Senior"}, -- (MAX: 3 elements) Main informations about the job\n            salary = 8000, -- Salary of the job\n            payInterval = "Hour" -- Interval of pay for the job\n            jobPosition = vector2(x, y) -- Optional (you can remove the line if you don\'t want the feature), set a waypoint to a location when applying to the job\n        },\n\n        ]]\n\n        {\n            label = "Medic",\n            job = "ambulance",\n            grade = 0,\n            information = {"Hard Working", "Full Time", "Senior"},\n            salary = 8000,\n            payInterval = "Hour",\n            jobPosition = vector2(50, 50)\n        },\n        {\n            label = "Car dealer",\n            job = "cardealer",\n            grade = 0,\n            information = {"Hard Working", "Full Time", "Senior"},\n            salary = 8000,\n            payInterval = "Hour",\n            jobPosition = vector2(300, 5000)\n        },\n    }\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(f,{...e})}):f(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>s,a:()=>a});var t=o(7294);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);